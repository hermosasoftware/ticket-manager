import { Box, Button, Checkbox, Divider, Flex, HStack, Text, VStack } from '@chakra-ui/react'
import React, { RefObject, useRef } from 'react'
import QRCode from './QRCode'
import { TTicket } from '../types/ticket'
import { useSize } from "@chakra-ui/react-use-size"
import { IconDownload } from '@tabler/icons'
import html2canvas from 'html2canvas';

interface ITicket {
  orderID: string | undefined,
  ticket: TTicket
}

const Ticket = ({ orderID, ticket }: ITicket) => {
  const ticketRef = useRef() as RefObject<any>
  const emptyBoxRef = useRef() as RefObject<HTMLDivElement>
  const emptyBoxDim = useSize(emptyBoxRef)

  const handleDownload = async () => {
    const element = ticketRef.current;
    const canvas = await html2canvas(element);

    const data = canvas.toDataURL('image/jpg');
    const link = document.createElement('a');

    if (typeof link.download === 'string') {
      link.href = data;
      link.download = 'image.jpg';

      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    } else {
      window.open(data);
    }
  };

  return (
    <VStack gap={4} alignItems={'baseline'}>
      <Button onClick={handleDownload}><IconDownload />Download</Button>
      <Box ref={ticketRef} bgColor={'chakra-body-bg'}>
        <VStack width={['400px', '500px', '500px']} gap={4} bgColor={'whiteAlpha.200'} borderRadius={10} p={5}>
          <HStack>
            <VStack>
              <Box ref={emptyBoxRef} minWidth='25%' minH={emptyBoxDim?.width} borderRadius='10' borderWidth='3px' borderColor={'teal.200'} >
                Image goes here
              </Box>
            </VStack>
            <VStack gap={4} alignItems={'baseline'} maxW={'70%'} justifyContent={'space-evenly'} h={'100%'}>
              <VStack spacing={6} alignItems={'baseline'}>
                <Text as='sub' fontSize='lg' fontWeight={'bold'} >
                  Event:</Text>
                <Text as='sub' fontSize='lg' color='gray.400' >
                  event name goes here </Text>
              </VStack>
              <VStack spacing={6} alignItems={'baseline'}>
                <Text as='sub' fontSize='lg' fontWeight={'bold'} wordBreak={'keep-all'}>
                  Date:</Text>
                <Text as='sub' fontSize='lg' color='gray.400' wordBreak={'keep-all'} >
                  START - END</Text>
              </VStack>
            </VStack>
          </HStack>
          <Divider />
          <Flex>
            <QRCode orderID={orderID} ticket={ticket} />
          </Flex>
          <Divider />
          <HStack spacing={1} alignItems={'baseline'}>
            <Text as='sub' fontSize='lg' fontWeight={'bold'} wordBreak={'keep-all'}>
              Email: </Text>
            <Text as='sub' fontSize='md' color='gray.400' wordBreak={'keep-all'} >
              longmailuserexample@email.com  </Text>
          </HStack>
          <HStack justifyContent={'space-evenly'} w={'100%'} >
            <HStack spacing={1} alignItems={'baseline'}>
              <Text as='sub' fontSize='lg' fontWeight={'bold'} wordBreak={'keep-all'}>
                Name: </Text>
              <Text as='sub' fontSize='md' color='gray.400' wordBreak={'keep-all'} >
                User Example  </Text>
            </HStack>

            <HStack spacing={1} alignItems={'baseline'}>
              <Text as='sub' fontSize='lg' fontWeight={'bold'} wordBreak={'keep-all'}>
                Phone: </Text>
              <Text as='sub' fontSize='md' color='gray.400' wordBreak={'keep-all'} >
                +50680808080  </Text>
            </HStack>
          </HStack>
          <HStack spacing={1} display={'block'}>
            <Text as='sub' fontStyle={'italic'} fontSize='sm' fontWeight={'bold'} wordBreak={'keep-all'}>
              Officially Generated by TicketManager Â©</Text>
          </HStack>
        </VStack>
      </Box>
    </VStack>
  )
}

export default Ticket